This is the image cropping dataset used in paper "Automatic Image Cropping using Visual Composition, Boundary Simplicity and Content Preservation Models".

Please cite as follows if you use this dataset:

@inproceedings{FLMS_mm14,
  author    = {Chen Fang and Zhe Lin and Radomir Mech and Xiaohui Shen},
  title     = {Automatic Image Cropping using Visual Composition, Boundary Simplicity and Content Preservation Models},
  booktitle = {ACM Multimedia},
  year      = {2014}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
The mat file "500_image_dataset.mat" contains a list of 500 images and the corresponding bounding boxes collected on Amazon Mechnical Turk.
The bbox field contains the four corners of bounding box in the order of (height_min, width_min, height_max, width_max).
So, if you have an 3 channel RGB image "im" to crop, this Matlab code will do the job: im(height_min:height_max, width_min:width_max, :).
For some reasons, turkers may fail to provid valid bounding boxes, in these cases, you may get negative coordinates, simply ignore them.
0 value means the first pixel, simply treat them as 1 if using in Matlab.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
This dataset is only for research purpose. We appreciate your interest in our work.

Images are crawled from Flickr. TO GET IMAGES, PLEASE CONTACT chenfang@cs.dartmouth.edu.